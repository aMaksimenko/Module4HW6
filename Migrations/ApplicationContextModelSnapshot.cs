// <auto-generated />
using System;
using HomeWork.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HomeWork.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HomeWork.DataAccess.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1995, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "slipknot@gmail.com",
                            Name = "Slipknot"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1994, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rammstein@gmail.com",
                            Name = "Rammstein"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(2008, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "oxxxymiron@mail.ru",
                            Name = "Oxxxymiron"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "stigmata@rambler.ru",
                            Name = "Gradnma's Smuzi"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1926, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "madonna@yahoo.com",
                            Name = "Skillet Lickers"
                        });
                });

            modelBuilder.Entity("HomeWork.DataAccess.Models.ArtistSong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("SongId");

                    b.ToTable("ArtistSongs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 2,
                            SongId = 1
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 2,
                            SongId = 2
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 4,
                            SongId = 1
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 3,
                            SongId = 3
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 5,
                            SongId = 5
                        });
                });

            modelBuilder.Entity("HomeWork.DataAccess.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Hard rock"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Pop"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Country"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Rap"
                        },
                        new
                        {
                            Id = 5,
                            Title = "K-pop"
                        });
                });

            modelBuilder.Entity("HomeWork.DataAccess.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = 300000,
                            GenreId = 1,
                            ReleaseDate = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Sonne"
                        },
                        new
                        {
                            Id = 2,
                            Duration = 300000,
                            GenreId = 1,
                            ReleaseDate = new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Ich tu dir weh"
                        },
                        new
                        {
                            Id = 3,
                            Duration = 300000,
                            GenreId = 4,
                            ReleaseDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Organization"
                        },
                        new
                        {
                            Id = 4,
                            Duration = 300000,
                            ReleaseDate = new DateTime(2004, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Wait and bleed"
                        },
                        new
                        {
                            Id = 5,
                            Duration = 300000,
                            ReleaseDate = new DateTime(1926, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Run, nigger, run"
                        });
                });

            modelBuilder.Entity("HomeWork.DataAccess.Models.ArtistSong", b =>
                {
                    b.HasOne("HomeWork.DataAccess.Models.Artist", "Artist")
                        .WithMany("ArtistSongs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeWork.DataAccess.Models.Song", "Song")
                        .WithMany("ArtistSongs")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("HomeWork.DataAccess.Models.Song", b =>
                {
                    b.HasOne("HomeWork.DataAccess.Models.Genre", "Genre")
                        .WithMany("Songs")
                        .HasForeignKey("GenreId");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("HomeWork.DataAccess.Models.Artist", b =>
                {
                    b.Navigation("ArtistSongs");
                });

            modelBuilder.Entity("HomeWork.DataAccess.Models.Genre", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("HomeWork.DataAccess.Models.Song", b =>
                {
                    b.Navigation("ArtistSongs");
                });
#pragma warning restore 612, 618
        }
    }
}
